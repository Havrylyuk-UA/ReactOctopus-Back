{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "ReactOctopus",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/formData"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://reactoctopus-back.onrender.com" },{ "url": "http://localhost:3000" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
     {
      "name": "Board",
      "description": "Boards endpoints"
    },
    {
      "name": "Column",
      "description": "Column endpoints"
    },
    {
      "name": "Card",
      "description": "Card endpoints"
    },
    {
      "name": "NeedHelp",
      "description": "Need help endpoint(можливо треба перенести в auth)"
    },
    {
      "name": "Images",
      "description": "Images endpoints. (тимчасові роути, якщо буде потрібно)"
    }
  ],


  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot process the request (invalid request body).",
            "content": {}
          },
          "409": {
            "description": "Conflict: Email already in use.",
            "content": {}
          }
        }
      }
    },
     "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot process the request (invalid request body).",
            "content": {}
          }
        }
      }
    },
         "/api/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user",
        "parameters": [],
             "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
                    "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          }
        }
      }
    },
         "/api/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
        
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          }
        }
      }
    },
             "/api/auth/update": {
      "patch": {
        "tags": ["Auth"],
        "summary": "User information update",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInfoResponse"
                }
              }
            }
          },
        "400": {
            "description": "Bad Request: The server cannot process the request (invalid request body).",
            "content": {}
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          }
        }
      }
    },

    "/api/auth/google": {
      "get": {
        "tags": ["Auth"],
        "summary": "User login with google",
        "parameters": [],
        "responses": {
          "301": {
            "description": "Redirect to google auth",
            "content": {}
          }
        }
      }
    },
      "/api/images/desctop": {
      "get": {
        "tags": ["Images"],
        "summary": "Get desctop x1 images",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The requested resource could not be found on the server.",
            "content": {}
          }
        }
      }
    },
         "/api/images/tablet": {
      "get": {
        "tags": ["Images"],
        "summary": "Get tablet x1 images",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The requested resource could not be found on the server.",
            "content": {}
          }
        }
      }
    },
         "/api/images/mobile": {
      "get": {
        "tags": ["Images"],
        "summary": "Get mobile x1 images",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The requested resource could not be found on the server.",
            "content": {}
          }
        }
      }
    },
         "/api/images/desctopx2": {
      "get": {
        "tags": ["Images"],
        "summary": "Get desctop x2 images",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The requested resource could not be found on the server.",
            "content": {}
          }
        }
      }
    },
         "/api/images/tabletx2": {
      "get": {
        "tags": ["Images"],
        "summary": "Get tablet x2 images",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The requested resource could not be found on the server.",
            "content": {}
          }
        }
      }
    },
         "/api/images/mobilex2": {
      "get": {
        "tags": ["Images"],
        "summary": "Get mobile x2 images",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The requested resource could not be found on the server.",
            "content": {}
          }
        }
      }
    },
         "/api/boards/get": {
      "get": {
        "tags": ["Board"],
        "summary": "Get all boards",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllBoardsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          }
        }
      }
    },
             "/api/boards/post": {
      "post": {
        "tags": ["Board"],
        "summary": "Post board",
        "parameters": [],
        "security": [{ "Bearer": [] }],
                "requestBody": {
          "description": "Post board object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostBoardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot process the request (invalid request body).",
            "content": {}
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          }
        }
      }
    },
                 "/api/boards/patch/:id": {
      "patch": {
        "tags": ["Board"],
        "summary": "Update bord on the server",
        "parameters": [],
        "security": [{ "Bearer": [] }],
                "requestBody": {
          "description": "Update board object at the server",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchBoardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot process the request (invalid request body).",
            "content": {}
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          },
          "404":{
            "description": "Not Found: The requested resource could not be found on the server.",
            "content": {}
          }
        }
      }
    },
                  "/api/boards/delete/:id": {
      "delete": {
        "tags": ["Board"],
        "summary": "Delete board from the server",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteBoardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          },
          "404":{
            "description": "Not Found: The requested resource could not be found on the server.",
            "content": {}
          }
        }
      }
    },
        "/api/columns/get": {
      "get": {
        "tags": ["Column"],
        "summary": "Get all columns",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllColumnsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          }
        }
      }
    },
              "/api/columns/post": {
      "post": {
        "tags": ["Column"],
        "summary": "Post column",
        "parameters": [],
        "security": [{ "Bearer": [] }],
                "requestBody": {
          "description": "Post column object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostColumnRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostColumnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot process the request (invalid request body).",
            "content": {}
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          }
        }
      }
    },
                 "/api/columns/patch/:id": {
      "patch": {
        "tags": ["Column"],
        "summary": "Update column on the server",
        "parameters": [],
        "security": [{ "Bearer": [] }],
                "requestBody": {
          "description": "Update column object at the server",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchColumnRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchColumnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot process the request (invalid request body).",
            "content": {}
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          },
          "404":{
            "description": "Not Found: The requested resource could not be found on the server.",
            "content": {}
          }
        }
      }
    },
                  "/api/columns/delete/:id": {
      "delete": {
        "tags": ["Column"],
        "summary": "Delete column from the server",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteColumnResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          },
          "404":{
            "description": "Not Found: The requested resource could not be found on the server.",
            "content": {}
          }
        }
      }
    },
             "/api/cards/get": {
      "get": {
        "tags": ["Card"],
        "summary": "Get all cards",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllCardsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          }
        }
      }
    },
         "/api/cards/post": {
      "post": {
        "tags": ["Card"],
        "summary": "Post card on the server",
        "parameters": [],
        "security": [{ "Bearer": [] }],
                "requestBody": {
          "description": "Post card object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot process the request (invalid request body).",
            "content": {}
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          }
        }
      }
    },
                 "/api/cards/patch/:id": {
      "patch": {
        "tags": ["Card"],
        "summary": "Update card on the server",
        "parameters": [],
        "security": [{ "Bearer": [] }],
                "requestBody": {
          "description": "Update card object at the server",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot process the request (invalid request body).",
            "content": {}
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          },
          "404":{
            "description": "Not Found: The requested resource could not be found on the server.",
            "content": {}
          }
        }
      }
    },
                  "/api/cards/delete/:id": {
      "delete": {
        "tags": ["Card"],
        "summary": "Delete cards from the server",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          },
          "404":{
            "description": "Not Found: The requested resource could not be found on the server.",
            "content": {}
          }
        }
      }
    },
      "/api/images/needhelp": {
      "get": {
        "tags": ["NeedHelp"],
        "summary": "Send email and message to our email",
        "parameters": [],
         "requestBody": {
          "description": "Need help object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NeedHelpRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NeedHelpResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot process the request (invalid request body).",
            "content": {}
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
            "name": {
            "type": "string",
            "description": "User's name",
            "example": "Andy Machine"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
        "LoginRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
            "name": {
            "type": "string",
            "description": "User's name",
            "example":  "Andy Machine"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "CurrentRequest": {
        "type": "object",
        "properties": {}
      },
       "PostBoardRequest": {
        "type": "object",
        "required": ["title", "iconId", "background"],
        "properties": {
            "title": {
            "type": "string",
            "description": "User boards",
            "example": "Neon Light Project"
          },
           "iconId": {
            "type": "string",
            "description": "Board icon id",
            "example": "2"
          },
                     "background": {
            "type": "string",
            "description": "Background image url",
            "example": "https://example/images/sakura.webp"
          }
      },
        "example": 
          {
            "title": "Project Office",
            "iconId": "1",
            "background":  "https://example/images/sakura.webp"
         }
    },
     "PatchBoardRequest": {
        "type": "object",
        "required": [],
        "properties": {
            "title": {
            "type": "string",
            "description": "User boards",
            "example": "Neon Light Project"
          },
           "iconId": {
            "type": "string",
            "description": "Board icon id",
            "example": "2"
          },
                     "background": {
            "type": "string",
            "description": "Background image url",
            "example": "https://example/images/sakura.webp"
          }
      },
        "example": 
          {
            "title": "Project Office",
            "iconId": "1",
            "background":  "https://example/images/sakura.webp"
         }
    },
          "PostColumnRequest": {
        "type": "object",
        "required": ["title"],
        "properties": {
            "title": {
            "type": "string",
            "description": "User boards",
            "example": "Neon Light Project"
          }
      },
        "example": 
          {
            "title": "Project Office"
         }
    },
        "PatchColumnRequest": {
        "type": "object",
        "required": [],
        "properties": {
            "title": {
            "type": "string",
            "description": "User boards",
            "example": "Neon Light Project"
          }
      },
        "example": 
          {
            "title": "Project Office"
         }
    },
        "PostCardRequest": {
        "type": "object",
        "required": ["title", "description", "priority","deadline" ],
        "properties": {
            "title": {
            "type": "string",
            "description": "User boards",
            "example": "Neon Light Project"
          },
          "description": {
            "type": "string",
            "description": "Task description",
            "example": "Create a visually stunning and eye-catching watch dial design that embodies our brand's essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design."
          },
          "priority": {
            "type": "string",
            "description": "Level of priority",
            "example": "medium"
          },
          "deadline": {
            "type": "string",
            "description": "Task dealine",
            "example": "2024-05-04T17:42:30.636+00:00"
          }
      },
        "example": 
              {
            "title": "The Watch Spot Design",
            "description": "Create a visually stunning and eye-catching watch dial design that embodies our brand's essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design.",
            "priority": "low",
            "deadline": "2024-05-04T17:42:30.636+00:00"
          }
    },
    "PatchCardRequest": {
        "type": "object",
        "required": [],
        "properties": {
            "title": {
            "type": "string",
            "description": "User boards",
            "example": "Neon Light Project"
          },
          "description": {
            "type": "string",
            "description": "Task description",
            "example": "Create a visually stunning and eye-catching watch dial design that embodies our brand's essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design."
          },
          "priority": {
            "type": "string",
            "description": "Level of priority",
            "example": "medium"
          },
          "deadline": {
            "type": "string",
            "description": "Task dealine",
            "example": "2024-05-04T17:42:30.636+00:00"
          }
      },
        "example": 
              {
            "title": "The Watch Spot Design",
            "description": "Create a visually stunning and eye-catching watch dial design that embodies our brand's essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design.",
            "priority": "low",
            "deadline": "2024-05-04T17:42:30.636+00:00"
          }
    },
          "NeedHelpRequest": {
        "type": "object",
        "required": ["email", "description"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "message": {
            "type": "string",
            "description": "User message",
            "example": "Some text im message"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "Andy Machine"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
             "token": {
              "type": "string",
              "description": "User's token",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MzFmMzg0MWMzNjA0OWQ3NmNmMWFjMyIsImlhdCI6MTcxNDU0OTYzNiwiZXhwIjoxNzE0NTUzMjM2fQ._bvC8euAfl_oehYuN8q7Ymtgc3T6Y3VpfYSFrJWgp_k"
            }
        }
      },
       "LoginResponse": {
        "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "Duke Anderson"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "token": {
              "type": "string",
              "description": "User's token",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MzFmMzg0MWMzNjA0OWQ3NmNmMWFjMyIsImlhdCI6MTcxNDU0OTYzNiwiZXhwIjoxNzE0NTUzMjM2fQ._bvC8euAfl_oehYuN8q7Ymtgc3T6Y3VpfYSFrJWgp_k"
            }
        }
    },
     "CurrentResponse": {
        "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "User's id",
              "example": "6631f3841c36049d76cf1ac3"
            },
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "Andy Machine"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "start": {
              "type": "date",
              "description": "User's token",
              "example": "2024-05-01T07:47:16.688+00:00"
            }
        }
    },
           "LogoutResponse": {
        "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "description": "message",
              "example": "Logout success" 
            }
        }
    },
        "ImagesResponse": {
        "type": "object",
          "properties": {
            "imageUrls": {}
        },
        "example": {
"imageUrls": [
"http://res.cloudinary.com/dnqperiuu/image/upload/v1714575613/react-octopus/route/e5l6os2xwkgtjmbkfuw6.webp",
"http://res.cloudinary.com/dnqperiuu/image/upload/v1714575614/react-octopus/route/heujomhkyiaavuoxqmiq.webp",
"http://res.cloudinary.com/dnqperiuu/image/upload/v1712575673/react-octopus/route/ikztmic75cfgbdhfuc1f.webp",
"http://res.cloudinary.com/dnqperiuu/image/upload/v17145123676/react-octopus/route/jsufvhlek6tdavzdmzvg.webp",
"http://res.cloudinary.com/dnqperiuu/image/upload/v1714575672/react-octopus/route/maopjnd6scj7z2wtcdog.webp",
"http://res.cloudinary.com/dnqperiuu/image/upload/v1714575673/react-octopus/route/muucbrq8v7kvywvio0jp.webp",
"http://res.cloudinary.com/dnqperiuu/image/upload/v1714575975/react-octopus/route/nrzdwyqz0x3phynrvqmp.webp",
"http://res.cloudinary.com/dnqperiuu/image/upload/v1711575876/react-octopus/route/pslkjxuhaxworen7rdyj.webp",
"http://res.cloudinary.com/dnqperiuu/image/upload/v1714571676/react-octopus/route/qgyeiqmm9zhlogcen0mj.webp",
"http://res.cloudinary.com/dnqperiuu/image/upload/v1711575623/react-octopus/route/t6vngzugp6qjakub1q0g.webp",
"http://res.cloudinary.com/dnqperiuu/image/upload/v1714575670/react-octopus/route/u9mmiv1ypl7b3yg9ka52.webp",
"http://res.cloudinary.com/dnqperiuu/image/upload/v1714575671/react-octopus/route/voiztzwnhjrvsdl7shsn.webp",
"http://res.cloudinary.com/dnqperiuu/image/upload/v1712575672/react-octopus/route/wympusczafztc5bg7kaz.webp",
"http://res.cloudinary.com/dnqperiuu/image/upload/v1714575673/react-octopus/route/yszsmlifjvpnpcwzxkul.webp",
"http://res.cloudinary.com/dnqperiuu/image/upload/v1714575674/react-octopus/route/z7z9sfi0e3iuiqlzgjdn.webp"
]
}
    },
     "GetAllBoardsResponse": {
        "type": "array",
        "items":{
        "type": "object",
        "required": ["title","background", "iconId", "owner", "_id"],
        "properties": {
            "title": {
            "type": "string",
            "description": "User boards",
            "example": "Neon Light Project"
          },
           "background": {
            "type": "string",
            "description": "Background image url",
            "example": "https://example/images/sakura.webp"
          },
           "iconId": {
            "type": "string",
            "description": "Board icon id",
            "example": "2"
          },
          "owner": {
            "type": "object",
            "discription": "owner of board",
            "example": {
              "_id": {
            "type": "string",
            "description": "owner id",
            "example": "6631f3841c36049d76cf1ac3"} 
            }
          },
          "_id": {
            "type": "string",
            "description": "board id",
             "example": "6631f3841c36049d76cf1ac3"
          } 
        }
      },
        "example": [
          {
            "title": "Project Office",
         "background": "https://example/images/nightSky.webp",
         "_id": "6631f3841c36049d76cf1ac3",
          "iconId": "1",
          "owner": {
                "_id": "6631f3141c36049126cf1ac"
            }
         },
         { "title": "Project Office",
         "background": "https://example/images/nightSky.webp",
          "iconId": "1",
          "_id": "6631f3841c36049d76cf1ac3",
          "owner": {
                "_id": "6631f3141c36049126cf1ac"
            }
        },
        { "title": "Project Office",
         "background": "https://example/images/nightSky.webp",
          "iconId": "1",
          "_id": "6631f3841c36049d76cf1ac3",
          "owner": {
                "_id": "6631f3141c36049126cf1ac"
            }
        }]
    },
         "PostBoardResponse": {
        "type": "object",
        "required": ["title","background", "iconId", "owner", "_id"],
        "properties": {
            "title": {
            "type": "string",
            "description": "User boards",
            "example": "Neon Light Project"
          },
           "background": {
            "type": "string",
            "description": "Background image url",
            "example": "https://example/images/sakura.webp"
          },
           "iconId": {
            "type": "string",
            "description": "Board icon id",
            "example": "2"
          },
          "owner": {
            "type": "object",
            "discription": "owner of board",
            "example": {
              "_id": {
            "type": "string",
            "description": "owner id",
            "example": "6631f3841c36049d76cf1ac3"} 
            }
          },
          "_id": {
            "type": "string",
            "description": "board id",
             "example": "6631f3841c36049d76cf1ac3"
          } 
      },
        "example": 
          {
          "title": "Project Office",
         "background": "https://example/images/nightSky.webp",
         "_id": "6631f3841c36049d76cf1ac3",
          "iconId": "1",
          "owner": {
                "_id": "6631f3141c36049126cf1ac"
            }
         }
    },
     "PatchBoardResponse": {
        "type": "object",
        "required": [],
        "properties": {
            "title": {
            "type": "string",
            "description": "User boards",
            "example": "Neon Light Project"
          },
           "background": {
            "type": "string",
            "description": "Background image url",
            "example": "https://example/images/sakura.webp"
          },
           "iconId": {
            "type": "string",
            "description": "Board icon id",
            "example": "2"
          },
          "owner": {
            "type": "object",
            "discription": "owner of board",
            "example": {
              "_id": {
            "type": "string",
            "description": "owner id",
            "example": "6631f3841c36049d76cf1ac3"} 
            }
          },
          "_id": {
            "type": "string",
            "description": "board id",
             "example": "6631f3841c36049d76cf1ac3"
          } 
      },
        "example": 
          {
          "title": "Project Office",
         "background": "https://example/images/nightSky.webp",
         "_id": "6631f3841c36049d76cf1ac3",
          "iconId": "1",
          "owner": {
                "_id": "6631f3141c36049126cf1ac"
            }
         }
    },

         "DeleteBoardResponse": {
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "description": "board id",
             "example": "6631f3841c36049d76cf1ac3"
          } 
      },
        "example": 
          {
         "id": "6631f3841c36049d76cf1ac3"
         }
    },
    
     "GetAllColumnsResponse": {
        "type": "array",
        "items":{
        "type": "object",
        "required": ["title", "owner", "_id"],
        "properties": {
            "title": {
            "type": "string",
            "description": "Board Column Title",
            "example": "Title-1"
          },
          "owner": {
            "type": "object",
            "discription": "Board Id",
            "example": {
              "_id": {
            "type": "string",
            "description": "Board id",
            "example": "6631f3841c36049d76cf1ac3"} 
            }
          },
          "_id": {
            "type": "string",
            "description": "board id",
             "example": "6631f3841c36049d76cf1ac3"
          } 
        }
      },
        "example": [
          {
            "title": "Project Office",
         "_id": "6631f3841c36049d76cf1ac3",
          "owner": {
                "_id": "6631f3141c36049126cf1ac"
            }
         },
         { "title": "Project Office",
          "_id": "6631f3841c36049d76cf1ac3",
          "owner": {
                "_id": "6631f3141c36049126cf1ac"
            }
        },
        { "title": "Project Office",
          "_id": "6631f3841c36049d76cf1ac3",
          "owner": {
                "_id": "6631f3141c36049126cf1ac"
            }
        }]
    },
    "PostColumnResponse": {
        "type": "array",
        "items":{
        "type": "object",
        "required": ["title", "owner", "_id"],
        "properties": {
            "title": {
            "type": "string",
            "description": "Board Column Title",
            "example": "Title-1"
          },
          "owner": {
            "type": "object",
            "discription": "Board Id",
            "example": {
              "_id": {
            "type": "string",
            "description": "Board id",
            "example": "6631f3841c36049d76cf1ac3"} 
            }
          },
          "_id": {
            "type": "string",
            "description": "board id",
             "example": "6631f3841c36049d76cf1ac3"
          } 
        }
      },
        "example":
          {
            "title": "Project Office",
         "_id": "6631f3841c36049d76cf1ac3",
          "owner": {
                "_id": "6631f3141c36049126cf1ac"
            }
         }
    },
    "PatchColumnResponse": {
        "type": "array",
        "items":{
        "type": "object",
        "required": ["title", "owner", "_id"],
        "properties": {
            "title": {
            "type": "string",
            "description": "Board Column Title",
            "example": "Title-1"
          },
          "owner": {
            "type": "object",
            "discription": "Board Id",
            "example": {
              "_id": {
            "type": "string",
            "description": "Board id",
            "example": "6631f3841c36049d76cf1ac3"} 
            }
          },
          "_id": {
            "type": "string",
            "description": "board id",
             "example": "6631f3841c36049d76cf1ac3"
          } 
        }
      },
        "example":
          {
            "title": "Project Office",
         "_id": "6631f3841c36049d76cf1ac3",
          "owner": {
                "_id": "6631f3141c36049126cf1ac"
            }
         }
    },
             "DeleteColumnResponse": {
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "description": "column id",
             "example": "6631f3841c36049d76cf1ac3"
          } 
      },
        "example": 
          {
         "id": "6631f3841c36049d76cf1ac3"
         }
    },
       "GetAllCardsResponse": {
        "type": "array",
        "items":{
        "type": "object",
        "required": ["title", "owner", "_id"],
        "properties": {
            "title": {
            "type": "string",
            "description": "Task title",
            "example": "Title-1"
          },
          "description": {
            "type": "string",
            "description": "Task description",
            "example": "Description-1"
          },
          "priority": {
            "type": "string",
            "description": "Level of priority",
            "example": "medium"
          },
          "deadline": {
            "type": "string",
            "description": "Task dealine",
            "example": "2024-05-04T17:42:30.636+00:00"
          },
          "owner": {
            "type": "object",
            "discription": "User Id",
            "example": {
              "_id": {
            "type": "string",
            "description": "Board id",
            "example": "6631f3841c36049d76cf1ac3"} 
            }
          },
          "_id": {
            "type": "string",
            "description": "board id",
             "example": "6631f3841c36049d76cf1ac3"
          } 
        }
      },
        "example": [
          {
            "title": "The Watch Spot Design",
            "description": "Create a visually stunning and eye-catching watch dial design that embodies our brand's essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design.",
            "priority": "low",
            "deadline": "2024-05-04T17:42:30.636+00:00",
            "_id": "6631f31411c3604119126cf1ac",
            "owner": {
              "_id": "6631f13141c316049126cf1ac"
            }
          },
          {
            "title": "Research and Analysis",
            "description": "Conduct in-depth research and analysis on the project's topic, gather relevant data, and identify key insights to inform decision-making and project planning.",
            "priority": "medium",
            "deadline": "2024-05-05T17:42:30.636+00:00",
            "_id": "66311f3141c31316049126cfffc",
            "owner": {
              "_id": "6631f13141c316049126cf1ac"
            }
          },
          {
            "title": "Concept Development",
            "description": "Brainstorm and develop creative concepts and ideas that align with the project's objectives, considering factors such as target audience, messaging, and visual representation.",
            "priority": "without",
            "deadline": "2024-05-06T17:42:30.636+00:00",
            "_id": "6631f3141c31312316049126cf34c",
            "owner": {
              "_id": "6631f13141c316049126cf1ac"
            }
          }]
    },
    "PostCardResponse": {
        "type": "array",
        "items":{
        "type": "object",
        "required": ["title", "owner", "_id"],
        "properties": {
            "title": {
            "type": "string",
            "description": "Task title",
            "example": "Title-1"
          },
          "description": {
            "type": "string",
            "description": "Task description",
            "example": "Description-1"
          },
          "priority": {
            "type": "string",
            "description": "Level of priority",
            "example": "medium"
          },
          "deadline": {
            "type": "string",
            "description": "Task dealine",
            "example": "2024-05-04T17:42:30.636+00:00"
          },
          "owner": {
            "type": "object",
            "discription": "User Id",
            "example": {
              "_id": {
            "type": "string",
            "description": "Board id",
            "example": "6631f3841c36049d76cf1ac3"} 
            }
          },
          "_id": {
            "type": "string",
            "description": "board id",
             "example": "6631f3841c36049d76cf1ac3"
          } 
        }
      },
        "example": 
          {
            "title": "The Watch Spot Design",
            "description": "Create a visually stunning and eye-catching watch dial design that embodies our brand's essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design.",
            "priority": "low",
            "deadline": "2024-05-04T17:42:30.636+00:00",
            "_id": "6631f31411c3604119126cf1ac",
            "owner": {
              "_id": "6631f13141c316049126cf1ac"
            }
          }
    },
     "PatchCardResponse": {
        "type": "array",
        "items":{
        "type": "object",
        "required": ["title", "owner", "_id"],
        "properties": {
            "title": {
            "type": "string",
            "description": "Task title",
            "example": "Title-1"
          },
          "description": {
            "type": "string",
            "description": "Task description",
            "example": "Description-1"
          },
          "priority": {
            "type": "string",
            "description": "Level of priority",
            "example": "medium"
          },
          "deadline": {
            "type": "string",
            "description": "Task dealine",
            "example": "2024-05-04T17:42:30.636+00:00"
          },
          "owner": {
            "type": "object",
            "discription": "User Id",
            "example": {
              "_id": {
            "type": "string",
            "description": "Board id",
            "example": "6631f3841c36049d76cf1ac3"} 
            }
          },
          "_id": {
            "type": "string",
            "description": "board id",
             "example": "6631f3841c36049d76cf1ac3"
          } 
        }
      },
        "example": 
          {
            "title": "The Watch Spot Design",
            "description": "Create a visually stunning and eye-catching watch dial design that embodies our brand's essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design.",
            "priority": "low",
            "deadline": "2024-05-04T17:42:30.636+00:00",
            "_id": "6631f31411c3604119126cf1ac",
            "owner": {
              "_id": "6631f13141c316049126cf1ac"
            }
          }
    },
             "DeleteCardResponse": {
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "description": "card id",
             "example": "6631f3841c36049d76cf1ac3"
          } 
      },
        "example": 
          {
         "id": "6631f3841c36049d76cf1ac3"
         }
    },
        "NeedHelpResponse": {
        "type": "object",
        "required": ["message"],
        "properties": {
          "message": {
            "type": "string",
            "description": "Message from server",
            "example": "Help message send"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}


